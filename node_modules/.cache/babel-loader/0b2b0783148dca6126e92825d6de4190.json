{"ast":null,"code":"import { ADMIN_LOGIN, ADMIN_REGISTER, UPDATE_ADMIN_PROFILE } from \"../type\";\nimport reduxAction from \"../action\";\nimport { settings } from \"../../../Config/settings\";\nimport { restConnector } from \"../../../Services\";\nimport Swal from 'sweetalert2';\nimport UserService from \"../../../Services/userService\";\nconst userService = new UserService(); // Async Action User\n\nexport const adminLoginAction = adminLogin => {\n  return dispatch => {\n    userService.adminLoginAction(adminLogin).then(res => {\n      //1.luu local\n      localStorage.setItem(settings.adminLogin, JSON.stringify(res.data));\n      localStorage.setItem(settings.token, res.data.accessToken); //lưu data lên store để render lại giao diện header\n\n      dispatch(reduxAction(ADMIN_LOGIN, res.data)); //bỏ token lên header của tất cả request\n\n      restConnector.defaults.headers['Authorization'] = \"Bearer \" + res.data.accessToken;\n      Swal.fire('Đăng nhập thành công!', '', 'success').then(() => {\n        window.location.reload();\n      });\n    }).catch(error => {\n      console.log(error.response.data);\n      Swal.fire({\n        icon: 'error',\n        title: 'Đăng nhập thất bại',\n        text: 'Vui lòng thử lại'\n      });\n    });\n  };\n};\nexport const adminProfileUpdate = adminProfileUpdate => {\n  return dispatch => {\n    userService.adminProfileUpdate(adminProfileUpdate).then(res => {\n      dispatch(reduxAction(UPDATE_ADMIN_PROFILE, res.data));\n      console.log(res.data);\n      Swal.fire('Cập nhật thành công!', '', 'success');\n    }).catch(error => {\n      console.log(error.response.data);\n      Swal.fire({\n        icon: 'error',\n        title: 'Cập nhật thất bại',\n        text: 'Vui lòng thử lại!'\n      });\n    });\n  };\n};","map":{"version":3,"sources":["c:\\Users\\KhaNguyen\\Desktop\\Elearning  Project  Redux Admin Side\\src\\Redux\\Action\\User\\AdminActions.jsx"],"names":["ADMIN_LOGIN","ADMIN_REGISTER","UPDATE_ADMIN_PROFILE","reduxAction","settings","restConnector","Swal","UserService","userService","adminLoginAction","adminLogin","dispatch","then","res","localStorage","setItem","JSON","stringify","data","token","accessToken","defaults","headers","fire","window","location","reload","catch","error","console","log","response","icon","title","text","adminProfileUpdate"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,EAAsCC,oBAAtC,QAAkE,SAAlE;AACA,OAAOC,WAAP,MAAwB,WAAxB;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,MAAMC,WAAW,GAAG,IAAID,WAAJ,EAApB,C,CAEA;;AAEA,OAAO,MAAME,gBAAgB,GAAIC,UAAD,IAAgB;AAC9C,SAAOC,QAAQ,IAAI;AACfH,IAAAA,WAAW,CACVC,gBADD,CACkBC,UADlB,EAECE,IAFD,CAEMC,GAAG,IAAI;AACX;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqBX,QAAQ,CAACM,UAA9B,EAA0CM,IAAI,CAACC,SAAL,CAAeJ,GAAG,CAACK,IAAnB,CAA1C;AACAJ,MAAAA,YAAY,CAACC,OAAb,CAAqBX,QAAQ,CAACe,KAA9B,EAAqCN,GAAG,CAACK,IAAJ,CAASE,WAA9C,EAHW,CAKX;;AAEAT,MAAAA,QAAQ,CAACR,WAAW,CAACH,WAAD,EAAca,GAAG,CAACK,IAAlB,CAAZ,CAAR,CAPW,CASX;;AACAb,MAAAA,aAAa,CAACgB,QAAd,CAAuBC,OAAvB,CAA+B,eAA/B,IAAkD,YAAYT,GAAG,CAACK,IAAJ,CAASE,WAAvE;AAEAd,MAAAA,IAAI,CAACiB,IAAL,CACE,uBADF,EAEE,EAFF,EAGE,SAHF,EAIEX,IAJF,CAIO,MAAM;AACXY,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,OANC;AAQD,KAtBD,EAuBCC,KAvBD,CAuBOC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeb,IAA3B;AACAZ,MAAAA,IAAI,CAACiB,IAAL,CAAU;AACRS,QAAAA,IAAI,EAAE,OADE;AAERC,QAAAA,KAAK,EAAE,oBAFC;AAGRC,QAAAA,IAAI,EAAE;AAHE,OAAV;AAKH,KA9BD;AA+BH,GAhCD;AAiCD,CAlCM;AAoCP,OAAO,MAAMC,kBAAkB,GAAIA,kBAAD,IAAwB;AACxD,SAAOxB,QAAQ,IAAI;AACfH,IAAAA,WAAW,CACV2B,kBADD,CACoBA,kBADpB,EAECvB,IAFD,CAEMC,GAAG,IAAI;AACXF,MAAAA,QAAQ,CAACR,WAAW,CAACD,oBAAD,EAAuBW,GAAG,CAACK,IAA3B,CAAZ,CAAR;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYjB,GAAG,CAACK,IAAhB;AACAZ,MAAAA,IAAI,CAACiB,IAAL,CACE,sBADF,EAEE,EAFF,EAGE,SAHF;AAKD,KAVD,EAUGI,KAVH,CAUSC,KAAK,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeb,IAA3B;AACAZ,MAAAA,IAAI,CAACiB,IAAL,CAAU;AACRS,QAAAA,IAAI,EAAE,OADE;AAERC,QAAAA,KAAK,EAAE,mBAFC;AAGRC,QAAAA,IAAI,EAAE;AAHE,OAAV;AAKD,KAjBD;AAoBH,GArBD;AAsBD,CAvBM","sourcesContent":["import { ADMIN_LOGIN, ADMIN_REGISTER, UPDATE_ADMIN_PROFILE } from \"../type\";\nimport reduxAction from \"../action\";\n\nimport { settings } from \"../../../Config/settings\";\nimport { restConnector } from \"../../../Services\";\n\nimport Swal from 'sweetalert2';\nimport UserService from \"../../../Services/userService\";\n\nconst userService = new UserService();\n\n// Async Action User\n\nexport const adminLoginAction = (adminLogin) => {\n  return dispatch => {\n      userService\n      .adminLoginAction(adminLogin)\n      .then(res => {\n        //1.luu local\n        localStorage.setItem(settings.adminLogin, JSON.stringify(res.data));\n        localStorage.setItem(settings.token, res.data.accessToken);\n\n        //lưu data lên store để render lại giao diện header\n\n        dispatch(reduxAction(ADMIN_LOGIN, res.data));\n\n        //bỏ token lên header của tất cả request\n        restConnector.defaults.headers['Authorization'] = \"Bearer \" + res.data.accessToken\n\n        Swal.fire (\n          'Đăng nhập thành công!',\n          '',\n          'success'\n        ).then(() => {\n          window.location.reload();\n      })\n\n      })\n      .catch(error => {\n          console.log(error.response.data);\n          Swal.fire({\n            icon: 'error',\n            title: 'Đăng nhập thất bại',\n            text: 'Vui lòng thử lại'\n        })\n      });\n  };\n};\n\nexport const adminProfileUpdate = (adminProfileUpdate) => {\n  return dispatch => {\n      userService\n      .adminProfileUpdate(adminProfileUpdate)\n      .then(res => {\n        dispatch(reduxAction(UPDATE_ADMIN_PROFILE, res.data));\n        console.log(res.data);\n        Swal.fire(\n          'Cập nhật thành công!',\n          '',\n          'success'\n        )\n      }).catch(error => {\n        console.log(error.response.data)\n        Swal.fire({\n          icon: 'error',\n          title: 'Cập nhật thất bại',\n          text: 'Vui lòng thử lại!'\n        })\n      })\n\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}