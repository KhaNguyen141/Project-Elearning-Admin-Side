{"ast":null,"code":"import { ADMIN_LOGIN, REGISTER, UPDATE_USER, USER_ADD_COURSE } from \"../type\";\nimport reduxAction from \"../action\";\nimport { settings } from \"../../../Config/settings\";\nimport { restConnector } from \"../../../Services\";\nimport Swal from 'sweetalert2';\nimport UserService from \"../../../Services/userService\";\nconst userService = new UserService(); // Async Action User\n\nexport const userLoginAction = userLogin => {\n  return dispatch => {\n    userService.userLoginAction(userLogin).then(res => {\n      //1.luu local\n      localStorage.setItem(settings.userLogin, JSON.stringify(res.data));\n      localStorage.setItem(settings.token, res.data.accessToken); //lưu data lên store để render lại giao diện header\n\n      dispatch(reduxAction(ADMIN_LOGIN, res.data)); //bỏ token lên header của tất cả request\n\n      restConnector.defaults.headers['Authorization'] = \"Bearer \" + res.data.accessToken;\n      Swal.fire('Đăng nhập thành công!', '', 'success').then(() => {\n        window.location.reload();\n      });\n    }).catch(error => {\n      console.log(error.response.data);\n      Swal.fire({\n        icon: 'error',\n        title: 'Đăng nhập thất bại',\n        text: 'Vui lòng thử lại'\n      });\n    });\n  };\n};\nexport const userRegisterAction = userRegister => {\n  return dispatch => {\n    userService.userRegisterAction(userRegister).then(res => {\n      dispatch(reduxAction(REGISTER, res.data));\n      console.log(res.data);\n      Swal.fire('Đăng ký thành công!', '', 'success').then(() => {\n        window.location.reload();\n      });\n    }).catch(error => {\n      console.log(error.response.data);\n      Swal.fire({\n        icon: 'error',\n        title: 'Đăng ký thất bại',\n        text: 'Tài khoản hoặc email đã tồn tại!'\n      });\n    });\n  };\n};\nexport const userProfileUpdate = userProfileUpdate => {\n  return dispatch => {\n    userService.userProfileUpdate(userProfileUpdate).then(res => {\n      dispatch(reduxAction(UPDATE_USER, res.data));\n      console.log(res.data);\n      Swal.fire('Cập nhật thành công!', '', 'success');\n    }).catch(error => {\n      console.log(error.response.data);\n      Swal.fire({\n        icon: 'error',\n        title: 'Cập nhật thất bại',\n        text: 'Vui lòng thử lại!'\n      });\n    });\n  };\n};","map":{"version":3,"sources":["c:\\Users\\KhaNguyen\\Desktop\\Elearning  Project  Redux Admin Side\\src\\Redux\\Action\\User\\UserActions.jsx"],"names":["ADMIN_LOGIN","REGISTER","UPDATE_USER","USER_ADD_COURSE","reduxAction","settings","restConnector","Swal","UserService","userService","userLoginAction","userLogin","dispatch","then","res","localStorage","setItem","JSON","stringify","data","token","accessToken","defaults","headers","fire","window","location","reload","catch","error","console","log","response","icon","title","text","userRegisterAction","userRegister","userProfileUpdate"],"mappings":"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","sourcesContent":["import { ADMIN_LOGIN, REGISTER, UPDATE_USER, USER_ADD_COURSE } from \"../type\";\nimport reduxAction from \"../action\";\n\nimport { settings } from \"../../../Config/settings\";\nimport { restConnector } from \"../../../Services\";\n\nimport Swal from 'sweetalert2';\nimport UserService from \"../../../Services/userService\";\n\nconst userService = new UserService();\n\n// Async Action User\n\nexport const userLoginAction = (userLogin) => {\n  return dispatch => {\n      userService\n      .userLoginAction(userLogin)\n      .then(res => {\n        //1.luu local\n        localStorage.setItem(settings.userLogin, JSON.stringify(res.data));\n        localStorage.setItem(settings.token, res.data.accessToken);\n\n        //lưu data lên store để render lại giao diện header\n\n        dispatch(reduxAction(ADMIN_LOGIN, res.data));\n\n        //bỏ token lên header của tất cả request\n        restConnector.defaults.headers['Authorization'] = \"Bearer \" + res.data.accessToken\n\n        Swal.fire (\n          'Đăng nhập thành công!',\n          '',\n          'success'\n        ).then(() => {\n          window.location.reload();\n      })\n\n      })\n      .catch(error => {\n          console.log(error.response.data);\n          Swal.fire({\n            icon: 'error',\n            title: 'Đăng nhập thất bại',\n            text: 'Vui lòng thử lại'\n        })\n      });\n  };\n};\n\nexport const userRegisterAction = (userRegister) => {\n  return dispatch => {\n      userService\n      .userRegisterAction(userRegister)\n      .then(res => {\n      dispatch(reduxAction(REGISTER, res.data));\n      console.log(res.data);\n      Swal.fire(\n        'Đăng ký thành công!',\n        '',\n        'success'\n    ).then(() => {\n        window.location.reload();\n    })\n    }).catch(error => {\n      console.log(error.response.data)\n      Swal.fire({\n        icon: 'error',\n        title: 'Đăng ký thất bại',\n        text: 'Tài khoản hoặc email đã tồn tại!',\n      })\n    });\n  }\n}\n\nexport const userProfileUpdate = (userProfileUpdate) => {\n  return dispatch => {\n      userService\n      .userProfileUpdate(userProfileUpdate)\n      .then(res => {\n        dispatch(reduxAction(UPDATE_USER, res.data));\n        console.log(res.data);\n        Swal.fire(\n          'Cập nhật thành công!',\n          '',\n          'success'\n        )\n      }).catch(error => {\n        console.log(error.response.data)\n        Swal.fire({\n          icon: 'error',\n          title: 'Cập nhật thất bại',\n          text: 'Vui lòng thử lại!'\n        })\n      })\n\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}